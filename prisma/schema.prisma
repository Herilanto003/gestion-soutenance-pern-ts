// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Students {
  id             Int           @id @default(autoincrement())
  registerNumber String        @unique
  firstName      String?
  lastName       String
  phone          String
  email          String
  sexe           Sexe
  level          String
  soutenance     Soutenances[]
}

model Teachers {
  id        Int      @id @default(autoincrement())
  firstName String?
  lastName  String
  phone     String
  email     String
  sexe      Sexe
  grade     String
  jurie     Juries[]
}

model Soutenances {
  id          Int              @id @default(autoincrement())
  dateAndHour DateTime?        @default(now())
  note        Float?
  room        String
  student     Students         @relation(fields: [studentId], references: [id])
  studentId   Int
  juries      Juries[]
  status      StatusSoutenance
  tag         Boolean
}

model Juries {
  id           Int         @id @default(autoincrement())
  role         RoleJury
  teacher      Teachers    @relation(fields: [teacherId], references: [id])
  teacherId    Int
  soutenance   Soutenances @relation(fields: [soutenanceId], references: [id])
  soutenanceId Int

  @@unique([teacherId, soutenanceId])
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

// enum for sexe
enum Sexe {
  HOMME
  FEMME
}

// enum for role jurie
enum RoleJury {
  ENCADREUR
  PRESIDENT
  EXAMINATEUR
}

// enum for status soutenance
enum StatusSoutenance {
  EN_COURS
  ANNULE
  FINI
}
